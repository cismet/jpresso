/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.jpresso.project.gui.options;

/**
 * DOCUMENT ME!
 *
 * @version  $Revision$, $Date$
 */
final class JpressofiletypesPanel extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final JpressofiletypesOptionsPanelController controller;

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new JpressofiletypesPanel object.
     *
     * @param  controller  DOCUMENT ME!
     */
    JpressofiletypesPanel(final JpressofiletypesOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 202, Short.MAX_VALUE));
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 68, Short.MAX_VALUE));
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     */
    void load() {
        // TODO read settings and initialize GUI Example:
        // someCheckBox.setSelected(Preferences.userNodeForPackage(JpressofiletypesPanel.class).getBoolean("someFlag",
        // false)); or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(JpressofiletypesPanel.class).getBoolean("someFlag", false));
        // or: someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    /**
     * DOCUMENT ME!
     */
    void store() {
        // TODO store modified settings Example:
        // Preferences.userNodeForPackage(JpressofiletypesPanel.class).putBoolean("someFlag",
        // someCheckBox.isSelected()); or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(JpressofiletypesPanel.class).putBoolean("someFlag", someCheckBox.isSelected()); or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
