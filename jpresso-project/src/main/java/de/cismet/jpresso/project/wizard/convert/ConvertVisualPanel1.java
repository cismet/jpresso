/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.jpresso.project.wizard.convert;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 * DOCUMENT ME!
 *
 * @version  $Revision$, $Date$
 */
public final class ConvertVisualPanel1 extends JPanel {

    //~ Static fields/initializers ---------------------------------------------

    private static final JFileChooser chooser = new JFileChooser();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckbCode;
    private javax.swing.JCheckBox ckbConnections;
    private javax.swing.JCheckBox ckbQueries;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form ConvertVisualPanel1.
     */
    public ConvertVisualPanel1() {
        initComponents();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setMultiSelectionEnabled(true);
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    public String getName() {
        return "Choose old JPresso files to import";
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    protected String getFile() {
        return jTextField1.getText();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    protected String getMergeProperties() {
        return ckbConnections.isSelected() + ";" + ckbQueries.isSelected() + ";" + ckbCode.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        ckbConnections = new javax.swing.JCheckBox();
        ckbQueries = new javax.swing.JCheckBox();
        ckbCode = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        jTextField1.setPreferredSize(new java.awt.Dimension(300, 20));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jTextField1ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 50, 5);
        add(jTextField1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, "...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 50, 5);
        add(jButton1, gridBagConstraints);

        ckbConnections.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(ckbConnections, "Merge Connections");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(ckbConnections, gridBagConstraints);

        ckbQueries.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(ckbQueries, "Merge Queries");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(ckbQueries, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(ckbCode, "Merge Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(ckbCode, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents
    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jTextField1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    } //GEN-LAST:event_jTextField1ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void jButton1ActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_jButton1ActionPerformed
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            final File[] sel = chooser.getSelectedFiles();
            final StringBuilder paths = new StringBuilder();
            if (sel != null) {
                for (final File f : sel) {
                    paths.append(f.getAbsolutePath()).append(";");
                }
            }
            final String file = paths.toString();
            jTextField1.setText(file);
        }
    }                                                                            //GEN-LAST:event_jButton1ActionPerformed
}
