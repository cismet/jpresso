/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * OutputFinalizer.java
 *
 * Created on 30. Januar 2008, 17:33
 */
package de.cismet.jpresso.project.gui.output;

import java.awt.Color;

import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

import de.cismet.jpresso.project.gui.output.filtering.TableSortDecorator;

/**
 * DOCUMENT ME!
 *
 * @author   srichter
 * @version  $Revision$, $Date$
 */
public class OutputFinalizer extends JPanel {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane scpLogs;
    private javax.swing.JScrollPane scpStatus;
    private javax.swing.JTable tblFinalizer;
    private javax.swing.JTextArea txtLogs;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

// private Finalizer finalizer;
    /**
     * Creates new form OutputFinalizer.
     */
    public OutputFinalizer() {
        this(null);
        setName("Finalizer");
    }

    /**
     * Creates a new OutputFinalizer object.
     *
     * @param  fin  DOCUMENT ME!
     */
    public OutputFinalizer(final TableModel fin) {
        initComponents();
        setFinalizer(fin);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @param  fin  DOCUMENT ME!
     */
    public void setFinalizer(final TableModel fin) {
        if (fin != null) {
            setName(fin.getClass().getSimpleName());
            this.tblFinalizer.setModel(fin);
            this.tblFinalizer.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tblFinalizer.getColumnModel().getColumn(1).setCellRenderer(new ProgressRenderer());
            TableSortDecorator.decorate(tblFinalizer);
            this.txtLogs.setForeground(java.awt.Color.BLUE);
        } else {
            // todo logging
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @param  message  DOCUMENT ME!
     * @param  color    DOCUMENT ME!
     */
    public void done(final String message, final Color color) {
        jLabel1.setForeground(color);
        jLabel1.setText(message);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        scpStatus = new javax.swing.JScrollPane();
        tblFinalizer = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        scpLogs = new javax.swing.JScrollPane();
        txtLogs = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        scpStatus.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        scpStatus.setPreferredSize(new java.awt.Dimension(300, 140));

        tblFinalizer.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                    {},
                    {},
                    {},
                    {}
                },
                new String[] {}));
        scpStatus.setViewportView(tblFinalizer);

        jPanel1.add(scpStatus, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(OutputFinalizer.class, "OutputFinalizer.jLabel1.text")); // NOI18N
        jPanel2.add(jLabel1);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(
                OutputFinalizer.class,
                "OutputFinalizer.jPanel1.TabConstraints.tabTitle"),
            jPanel1); // NOI18N

        scpLogs.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        txtLogs.setBackground(new java.awt.Color(240, 240, 240));
        txtLogs.setEditable(false);
        scpLogs.setViewportView(txtLogs);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(
                OutputFinalizer.class,
                "OutputFinalizer.scpLogs.TabConstraints.tabTitle_1"),
            scpLogs); // NOI18N

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
        jTabbedPane1.getAccessibleContext()
                .setAccessibleName(org.openide.util.NbBundle.getMessage(
                        OutputFinalizer.class,
                        "OutputFinalizer.jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N
    }                                                                                      // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  log  DOCUMENT ME!
     */
    public void setLog(final String log) {
        txtLogs.setText(log);
    }

    //~ Inner Classes ----------------------------------------------------------

    /**
     * A progressbar cell renderer.
     *
     * @version  $Revision$, $Date$
     */
    static class ProgressRenderer extends JProgressBar implements TableCellRenderer {

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new ProgressRenderer object.
         */
        public ProgressRenderer() {
        }

        //~ Methods ------------------------------------------------------------

        /**
         * DOCUMENT ME!
         *
         * @param   table       DOCUMENT ME!
         * @param   value       DOCUMENT ME!
         * @param   isSelected  DOCUMENT ME!
         * @param   hasFocus    DOCUMENT ME!
         * @param   row         DOCUMENT ME!
         * @param   column      DOCUMENT ME!
         *
         * @return  DOCUMENT ME!
         *
         * @see     TableCellRenderer
         */
        @Override
        public java.awt.Component getTableCellRendererComponent(final javax.swing.JTable table,
                final Object value,
                final boolean isSelected,
                final boolean hasFocus,
                final int row,
                final int column) {
            return (JProgressBar)value;
        }
    }
}
